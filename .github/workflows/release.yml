name: Release Build & Verification

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g. 1.0.0)'
        required: true

jobs:
  build-release:
    name: Build Release APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'microsoft'
          cache: gradle
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.7
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: latest
          packages: |
            platforms;android-34
            build-tools;34.0.0
      
      - name: Build release APK
        run: ./gradlew assembleRelease
      
      - name: Sign APK
        uses: r0adkll/sign-android-release@v1.0.4
        id: sign_apk
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"
      
      # Verify the signed APK
      - name: Verify APK
        run: |
          APK_PATH=${{ steps.sign_apk.outputs.signedReleaseFile }}
          echo "Verifying APK: $APK_PATH"
          # Run basic verification that the APK is valid
          $ANDROID_HOME/build-tools/34.0.0/apksigner verify --verbose $APK_PATH
      
      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: ${{ steps.sign_apk.outputs.signedReleaseFile }}
      
      # Create GitHub Release
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.sign_apk.outputs.signedReleaseFile }}
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
